
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.8'

_lr_method = 'LALR'

_lr_signature = 'DB2535D6EC4406A1ECE42E602F4E7563'
    
_lr_action_items = {'RETURN':([0,1,2,4,5,7,8,9,10,12,13,16,20,21,24,25,27,29,30,31,32,34,36,37,39,41,56,58,60,61,62,63,79,83,87,91,93,102,131,132,134,135,139,140,144,145,146,147,148,150,151,152,153,154,],[-6,-6,-75,-3,-2,-74,-77,15,-5,-8,-76,-19,-21,-22,-24,-20,15,-18,-17,-4,-25,15,-23,-15,-16,-6,15,15,-14,-40,-39,15,-26,-7,-38,-27,-28,-29,15,15,15,15,-30,-41,-31,-33,-35,-36,-37,-78,15,15,-32,-34,]),'WHILE':([0,1,2,4,5,7,8,9,10,12,13,16,20,21,24,25,27,29,30,31,32,34,36,37,39,41,56,58,60,61,62,63,79,83,87,91,93,102,131,132,134,135,139,140,144,145,146,147,148,150,151,152,153,154,],[-6,-6,-75,-3,-2,-74,-77,19,-5,-8,-76,-19,-21,-22,-24,-20,19,-18,-17,-4,-25,19,-23,-15,-16,-6,19,19,-14,-40,-39,19,-26,-7,-38,-27,-28,-29,19,19,19,19,-30,-41,-31,-33,-35,-36,-37,-78,19,19,-32,-34,]),'PRINT':([0,1,2,4,5,7,8,9,10,12,13,16,20,21,24,25,27,29,30,31,32,34,36,37,39,41,56,58,60,61,62,63,79,83,87,91,93,102,131,132,134,135,139,140,144,145,146,147,148,150,151,152,153,154,],[-6,-6,-75,-3,-2,-74,-77,18,-5,-8,-76,-19,-21,-22,-24,-20,18,-18,-17,-4,-25,18,-23,-15,-16,-6,18,18,-14,-40,-39,18,-26,-7,-38,-27,-28,-29,18,18,18,18,-30,-41,-31,-33,-35,-36,-37,-78,18,18,-32,-34,]),'NEQ':([22,26,28,33,35,42,47,48,52,55,90,96,97,103,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,130,133,137,138,],[-46,-43,-45,-47,-44,80,-47,80,80,80,80,-67,-66,80,80,-59,None,-52,80,None,-58,-48,-50,-49,-51,80,None,None,None,None,80,80,80,80,-68,-69,]),'LE':([22,26,28,33,35,42,47,48,52,55,90,96,97,103,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,130,133,137,138,],[-46,-43,-45,-47,-44,66,-47,66,66,66,66,-67,-66,66,66,-59,None,-52,66,None,-58,-48,-50,-49,-51,66,None,None,None,None,66,66,66,66,-68,-69,]),'%':([22,26,28,33,35,42,47,48,52,55,90,96,97,103,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,130,133,137,138,],[-46,-43,-45,-47,-44,67,-47,67,67,67,67,-67,-66,67,67,67,67,-52,67,67,67,67,-50,67,-51,67,67,67,67,67,67,67,67,67,-68,-69,]),'&':([22,26,28,33,35,42,47,48,52,55,90,96,97,103,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,130,133,137,138,],[-46,-43,-45,-47,-44,68,-47,68,68,68,68,-67,-66,68,68,-59,-64,-52,-54,-63,-58,-48,-50,-49,-51,68,-60,-62,-65,-61,68,68,68,68,-68,-69,]),')':([22,26,28,35,47,52,54,55,57,85,88,89,90,94,95,96,97,99,100,101,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,126,127,128,133,137,138,143,149,],[-46,-43,-45,-44,-47,-73,96,97,-71,-80,131,132,-42,134,135,-67,-66,-70,137,138,-56,-59,-64,-52,-54,-63,-58,-48,-50,-49,-51,-57,-60,-62,-65,-61,-53,-55,-79,142,-82,-72,-68,-69,-83,-81,]),'(':([0,1,2,4,5,7,8,9,10,12,13,15,16,17,18,19,20,21,23,24,25,27,29,30,31,32,33,34,36,37,39,41,45,46,47,49,53,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,86,87,91,92,93,98,102,131,132,134,135,139,140,144,145,146,147,148,150,151,152,153,154,],[-6,-6,-75,-3,-2,-74,-77,23,-5,-8,-76,23,-19,49,23,53,-21,-22,23,-24,-20,23,-18,-17,-4,-25,57,23,-23,-15,-16,-6,85,85,57,23,23,23,23,23,23,-14,-40,-39,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,23,-26,23,23,23,-7,23,-38,-27,23,-28,23,-29,23,23,23,23,-30,-41,-31,-33,-35,-36,-37,-78,23,23,-32,-34,]),'+':([22,26,28,33,35,42,47,48,52,55,90,96,97,103,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,130,133,137,138,],[-46,-43,-45,-47,-44,71,-47,71,71,71,71,-67,-66,71,71,71,71,-52,71,71,71,-48,-50,-49,-51,71,71,71,71,71,71,71,71,71,-68,-69,]),'*':([22,26,28,33,35,42,47,48,52,55,90,96,97,103,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,130,133,137,138,],[-46,-43,-45,-47,-44,72,-47,72,72,72,72,-67,-66,72,72,72,72,-52,72,72,72,72,-50,72,-51,72,72,72,72,72,72,72,72,72,-68,-69,]),'-':([22,26,28,33,35,42,47,48,52,55,90,96,97,103,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,130,133,137,138,],[-46,-43,-45,-47,-44,73,-47,73,73,73,73,-67,-66,73,73,73,73,-52,73,73,73,-48,-50,-49,-51,73,73,73,73,73,73,73,73,73,-68,-69,]),',':([22,26,28,35,43,44,47,50,52,96,97,99,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,126,128,130,133,137,138,143,149,],[-46,-43,-45,-44,-10,84,-47,92,-73,-67,-66,92,-56,-59,-64,-52,-54,-63,-58,-48,-50,-49,-51,-57,-60,-62,-65,-61,-53,-55,-9,141,-82,-11,-72,-68,-69,-83,-81,]),'/':([22,26,28,33,35,42,47,48,52,55,90,96,97,103,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,130,133,137,138,],[-46,-43,-45,-47,-44,74,-47,74,74,74,74,-67,-66,74,74,74,74,-52,74,74,74,74,-50,74,-51,74,74,74,74,74,74,74,74,74,-68,-69,]),'ID':([0,1,2,4,5,7,8,9,10,11,12,13,14,15,16,18,20,21,23,24,25,27,29,30,31,32,34,36,37,39,41,49,53,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,86,87,91,92,93,98,102,105,129,131,132,134,135,139,140,144,145,146,147,148,150,151,152,153,154,],[-6,-6,-75,-3,-2,-74,-77,33,-5,45,-8,-76,46,47,-19,47,-21,-22,47,-24,-20,33,-18,-17,-4,-25,33,-23,-15,-16,-6,47,47,33,47,33,47,-14,-40,-39,33,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,-26,47,47,47,-7,125,47,-38,-27,47,-28,47,-29,125,143,33,33,33,33,-30,-41,-31,-33,-35,-36,-37,-78,33,33,-32,-34,]),'INTEGER':([0,1,2,4,5,7,8,9,10,12,13,15,16,18,20,21,23,24,25,27,29,30,31,32,34,36,37,39,41,49,53,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,86,87,91,92,93,98,102,131,132,134,135,139,140,144,145,146,147,148,150,151,152,153,154,],[-6,-6,-75,-3,-2,-74,-77,26,-5,-8,-76,26,-19,26,-21,-22,26,-24,-20,26,-18,-17,-4,-25,26,-23,-15,-16,-6,26,26,26,26,26,26,-14,-40,-39,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,26,-26,26,26,26,-7,26,-38,-27,26,-28,26,-29,26,26,26,26,-30,-41,-31,-33,-35,-36,-37,-78,26,26,-32,-34,]),';':([6,22,26,28,33,35,38,40,42,43,44,47,48,50,51,52,90,96,97,103,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,124,130,133,136,137,138,],[12,-46,-43,-45,-47,-44,61,62,79,-10,83,-47,87,91,93,-73,-42,-67,-66,139,-56,-59,-64,-52,-54,-63,-58,-48,-50,-49,-51,-57,-60,-62,-65,-61,-53,-55,-9,-11,-72,148,-68,-69,]),'^':([22,26,28,33,35,42,47,48,52,55,90,96,97,103,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,130,133,137,138,],[-46,-43,-45,-47,-44,82,-47,82,82,82,82,-67,-66,82,82,-59,-64,-52,-54,-63,-58,-48,-50,-49,-51,82,-60,-62,-65,-61,82,-55,82,82,-68,-69,]),'=':([33,45,125,],[59,86,86,]),'<':([22,26,28,33,35,42,47,48,52,55,90,96,97,103,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,130,133,137,138,],[-46,-43,-45,-47,-44,69,-47,69,69,69,69,-67,-66,69,69,-59,None,-52,69,None,-58,-48,-50,-49,-51,69,None,None,None,None,69,69,69,69,-68,-69,]),'$end':([0,1,2,3,4,5,7,8,9,10,12,13,16,20,21,24,25,29,30,31,32,34,36,37,39,60,61,62,79,83,87,91,93,102,139,140,144,145,146,147,148,150,153,154,],[-6,-1,-75,0,-3,-2,-74,-77,-13,-5,-8,-76,-19,-21,-22,-24,-20,-18,-17,-4,-25,-12,-23,-15,-16,-14,-40,-39,-26,-7,-38,-27,-28,-29,-30,-41,-31,-33,-35,-36,-37,-78,-32,-34,]),'SHR':([22,26,28,33,35,42,47,48,52,55,90,96,97,103,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,130,133,137,138,],[-46,-43,-45,-47,-44,65,-47,65,65,65,65,-67,-66,65,65,-59,65,-52,65,65,-58,-48,-50,-49,-51,65,65,65,65,65,65,65,65,65,-68,-69,]),'REPEAT':([0,1,2,4,5,7,8,9,10,12,13,16,20,21,24,25,27,29,30,31,32,34,36,37,39,41,56,58,60,61,62,63,79,83,87,91,93,102,131,132,134,135,139,140,144,145,146,147,148,150,151,152,153,154,],[-6,-6,-75,-3,-2,-74,-77,27,-5,-8,-76,-19,-21,-22,-24,-20,27,-18,-17,-4,-25,27,-23,-15,-16,-6,27,27,-14,-40,-39,27,-26,-7,-38,-27,-28,-29,27,27,27,27,-30,-41,-31,-33,-35,-36,-37,-78,27,27,-32,-34,]),'STRING':([0,1,2,4,5,7,8,9,10,12,13,15,16,18,20,21,23,24,25,27,29,30,31,32,34,36,37,39,41,49,53,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,86,87,91,92,93,98,102,131,132,134,135,139,140,144,145,146,147,148,150,151,152,153,154,],[-6,-6,-75,-3,-2,-74,-77,28,-5,-8,-76,28,-19,28,-21,-22,28,-24,-20,28,-18,-17,-4,-25,28,-23,-15,-16,-6,28,28,28,28,28,28,-14,-40,-39,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,-26,28,28,28,-7,28,-38,-27,28,-28,28,-29,28,28,28,28,-30,-41,-31,-33,-35,-36,-37,-78,28,28,-32,-34,]),'ELSE':([16,20,21,24,25,29,30,32,36,39,61,62,79,87,91,93,102,139,140,144,145,146,147,148,153,154,],[-19,-21,-22,-24,-20,-18,-17,-25,-23,-16,-40,-39,-26,-38,-27,-28,-29,-30,-41,151,152,-35,-36,-37,-32,-34,]),'GE':([22,26,28,33,35,42,47,48,52,55,90,96,97,103,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,130,133,137,138,],[-46,-43,-45,-47,-44,78,-47,78,78,78,78,-67,-66,78,78,-59,None,-52,78,None,-58,-48,-50,-49,-51,78,None,None,None,None,78,78,78,78,-68,-69,]),'EQ':([22,26,28,33,35,42,47,48,52,55,90,96,97,103,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,130,133,137,138,],[-46,-43,-45,-47,-44,76,-47,76,76,76,76,-67,-66,76,76,-59,None,-52,76,None,-58,-48,-50,-49,-51,76,None,None,None,None,76,76,76,76,-68,-69,]),'UNTIL':([16,20,21,24,25,29,30,32,36,37,39,56,60,61,62,79,87,91,93,102,139,140,144,145,146,147,148,153,154,],[-19,-21,-22,-24,-20,-18,-17,-25,-23,-15,-16,98,-14,-40,-39,-26,-38,-27,-28,-29,-30,-41,-31,-33,-35,-36,-37,-32,-34,]),'IF':([0,1,2,4,5,7,8,9,10,12,13,16,20,21,24,25,27,29,30,31,32,34,36,37,39,41,56,58,60,61,62,63,79,83,87,91,93,102,131,132,134,135,139,140,144,145,146,147,148,150,151,152,153,154,],[-6,-6,-75,-3,-2,-74,-77,17,-5,-8,-76,-19,-21,-22,-24,-20,17,-18,-17,-4,-25,17,-23,-15,-16,-6,17,17,-14,-40,-39,17,-26,-7,-38,-27,-28,-29,17,17,17,17,-30,-41,-31,-33,-35,-36,-37,-78,17,17,-32,-34,]),'AND':([22,26,28,33,35,42,47,48,52,55,90,96,97,103,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,130,133,137,138,],[-46,-43,-45,-47,-44,64,-47,64,64,64,64,-67,-66,64,-56,-59,-64,-52,-54,-63,-58,-48,-50,-49,-51,64,-60,-62,-65,-61,-53,-55,64,64,-68,-69,]),':':([33,],[58,]),'SHL':([22,26,28,33,35,42,47,48,52,55,90,96,97,103,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,130,133,137,138,],[-46,-43,-45,-47,-44,70,-47,70,70,70,70,-67,-66,70,70,-59,70,-52,70,70,-58,-48,-50,-49,-51,70,70,70,70,70,70,70,70,70,-68,-69,]),'TYPE':([0,1,2,4,5,7,8,9,10,12,13,16,20,21,24,25,29,30,31,32,34,36,37,39,41,60,61,62,63,79,83,85,87,91,93,102,139,140,141,144,145,146,147,148,150,153,154,],[-6,-6,11,-3,-2,14,-77,-13,-5,-8,-76,-19,-21,-22,-24,-20,-18,-17,-4,-25,-12,-23,-15,-16,-6,-14,-40,-39,105,-26,-7,129,-38,-27,-28,-29,-30,-41,129,-31,-33,-35,-36,-37,-78,-32,-34,]),'FLOAT':([0,1,2,4,5,7,8,9,10,12,13,15,16,18,20,21,23,24,25,27,29,30,31,32,34,36,37,39,41,49,53,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,86,87,91,92,93,98,102,131,132,134,135,139,140,144,145,146,147,148,150,151,152,153,154,],[-6,-6,-75,-3,-2,-74,-77,35,-5,-8,-76,35,-19,35,-21,-22,35,-24,-20,35,-18,-17,-4,-25,35,-23,-15,-16,-6,35,35,35,35,35,35,-14,-40,-39,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,-26,35,35,35,-7,35,-38,-27,35,-28,35,-29,35,35,35,35,-30,-41,-31,-33,-35,-36,-37,-78,35,35,-32,-34,]),'|':([22,26,28,33,35,42,47,48,52,55,90,96,97,103,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,130,133,137,138,],[-46,-43,-45,-47,-44,81,-47,81,81,81,81,-67,-66,81,81,-59,-64,-52,-54,-63,-58,-48,-50,-49,-51,81,-60,-62,-65,-61,-53,-55,81,81,-68,-69,]),'BREAK':([0,1,2,4,5,7,8,9,10,12,13,16,20,21,24,25,27,29,30,31,32,34,36,37,39,41,56,58,60,61,62,63,79,83,87,91,93,102,131,132,134,135,139,140,144,145,146,147,148,150,151,152,153,154,],[-6,-6,-75,-3,-2,-74,-77,38,-5,-8,-76,-19,-21,-22,-24,-20,38,-18,-17,-4,-25,38,-23,-15,-16,-6,38,38,-14,-40,-39,38,-26,-7,-38,-27,-28,-29,38,38,38,38,-30,-41,-31,-33,-35,-36,-37,-78,38,38,-32,-34,]),'CONTINUE':([0,1,2,4,5,7,8,9,10,12,13,16,20,21,24,25,27,29,30,31,32,34,36,37,39,41,56,58,60,61,62,63,79,83,87,91,93,102,131,132,134,135,139,140,144,145,146,147,148,150,151,152,153,154,],[-6,-6,-75,-3,-2,-74,-77,40,-5,-8,-76,-19,-21,-22,-24,-20,40,-18,-17,-4,-25,40,-23,-15,-16,-6,40,40,-14,-40,-39,40,-26,-7,-38,-27,-28,-29,40,40,40,40,-30,-41,-31,-33,-35,-36,-37,-78,40,40,-32,-34,]),'error':([0,1,2,4,5,7,8,9,10,12,13,16,18,20,21,23,24,25,29,30,31,32,34,36,37,39,41,49,53,57,60,61,62,63,79,83,87,91,93,102,139,140,144,145,146,147,148,150,153,154,],[-6,-6,6,-3,-2,-74,-77,-13,-5,-8,-76,-19,51,-21,-22,54,-24,-20,-18,-17,-4,-25,-12,-23,-15,-16,-6,89,95,101,-14,-40,-39,6,-26,-7,-38,-27,-28,-29,-30,-41,-31,-33,-35,-36,-37,-78,-32,-34,]),'{':([0,1,2,4,5,7,8,9,10,12,13,16,20,21,24,25,27,29,30,31,32,34,36,37,39,41,56,58,60,61,62,63,79,83,87,91,93,102,131,132,134,135,139,140,142,144,145,146,147,148,150,151,152,153,154,],[-6,-6,-75,-3,-2,-74,-77,41,-5,-8,-76,-19,-21,-22,-24,-20,41,-18,-17,-4,-25,41,-23,-15,-16,-6,41,41,-14,-40,-39,41,-26,-7,-38,-27,-28,-29,41,41,41,41,-30,-41,41,-31,-33,-35,-36,-37,-78,41,41,-32,-34,]),'>':([22,26,28,33,35,42,47,48,52,55,90,96,97,103,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,130,133,137,138,],[-46,-43,-45,-47,-44,77,-47,77,77,77,77,-67,-66,77,77,-59,None,-52,77,None,-58,-48,-50,-49,-51,77,None,None,None,None,77,77,77,77,-68,-69,]),'}':([10,12,16,20,21,24,25,29,30,32,34,36,37,39,41,60,61,62,63,79,83,87,91,93,102,104,139,140,144,145,146,147,148,153,154,],[-5,-8,-19,-21,-22,-24,-20,-18,-17,-25,-12,-23,-15,-16,-6,-14,-40,-39,-13,-26,-7,-38,-27,-28,-29,140,-30,-41,-31,-33,-35,-36,-37,-32,-34,]),'OR':([22,26,28,33,35,42,47,48,52,55,90,96,97,103,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,130,133,137,138,],[-46,-43,-45,-47,-44,75,-47,75,75,75,75,-67,-66,75,-56,-59,-64,-52,-54,-63,-58,-48,-50,-49,-51,-57,-60,-62,-65,-61,-53,-55,75,75,-68,-69,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'declarations':([0,1,41,],[2,2,63,]),'expr_list':([18,57,],[50,99,]),'choice_instr':([9,27,34,56,58,63,131,132,134,135,151,152,],[16,16,16,16,16,16,16,16,16,16,16,16,]),'arg':([85,141,],[128,149,]),'repeat_instr':([9,27,34,56,58,63,131,132,134,135,151,152,],[20,20,20,20,20,20,20,20,20,20,20,20,]),'return_instr':([9,27,34,56,58,63,131,132,134,135,151,152,],[21,21,21,21,21,21,21,21,21,21,21,21,]),'const':([9,15,18,23,27,34,49,53,56,57,58,59,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,81,82,86,92,98,131,132,134,135,151,152,],[22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'continue_instr':([9,27,34,56,58,63,131,132,134,135,151,152,],[24,24,24,24,24,24,24,24,24,24,24,24,]),'while_instr':([9,27,34,56,58,63,131,132,134,135,151,152,],[25,25,25,25,25,25,25,25,25,25,25,25,]),'init':([11,84,105,],[43,124,43,]),'program':([0,],[3,]),'args_list_or_empty':([85,],[127,]),'blocks':([0,],[1,]),'assignment':([9,27,34,56,58,63,131,132,134,135,151,152,],[29,29,29,29,29,29,29,29,29,29,29,29,]),'fundefs':([2,],[7,]),'labeled_instr':([9,27,34,56,58,63,131,132,134,135,151,152,],[30,30,30,30,30,30,30,30,30,30,30,30,]),'instructions_opt':([9,63,],[31,104,]),'compound_instr':([9,27,34,56,58,63,131,132,134,135,142,151,152,],[32,32,32,32,32,32,32,32,32,32,150,32,32,]),'inits':([11,105,],[44,44,]),'declaration':([2,63,],[10,10,]),'args_list':([85,],[126,]),'condition':([49,53,98,],[88,94,136,]),'instructions':([9,27,63,],[34,56,34,]),'expr_list_or_empty':([57,],[100,]),'break_instr':([9,27,34,56,58,63,131,132,134,135,151,152,],[36,36,36,36,36,36,36,36,36,36,36,36,]),'instruction':([9,27,34,56,58,63,131,132,134,135,151,152,],[37,37,60,60,102,37,144,145,146,147,153,154,]),'fundefs_opt':([2,],[9,]),'fundef':([2,7,],[8,13,]),'print_instr':([9,27,34,56,58,63,131,132,134,135,151,152,],[39,39,39,39,39,39,39,39,39,39,39,39,]),'expression':([9,15,18,23,27,34,49,53,56,57,58,59,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,80,81,82,86,92,98,131,132,134,135,151,152,],[42,48,52,55,42,42,90,90,42,52,42,103,42,106,107,108,109,110,111,112,113,114,115,116,117,118,119,120,121,122,123,130,133,90,42,42,42,42,42,42,]),'block':([0,1,],[4,5,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> blocks','program',1,'p_program','Cparser.py',42),
  ('blocks -> blocks block','blocks',2,'p_blocks','Cparser.py',48),
  ('blocks -> block','blocks',1,'p_blocks','Cparser.py',49),
  ('block -> declarations fundefs_opt instructions_opt','block',3,'p_block','Cparser.py',63),
  ('declarations -> declarations declaration','declarations',2,'p_declarations','Cparser.py',68),
  ('declarations -> <empty>','declarations',0,'p_declarations','Cparser.py',69),
  ('declaration -> TYPE inits ;','declaration',3,'p_declaration','Cparser.py',83),
  ('declaration -> error ;','declaration',2,'p_declaration','Cparser.py',84),
  ('inits -> inits , init','inits',3,'p_inits','Cparser.py',92),
  ('inits -> init','inits',1,'p_inits','Cparser.py',93),
  ('init -> ID = expression','init',3,'p_init','Cparser.py',103),
  ('instructions_opt -> instructions','instructions_opt',1,'p_instructions_opt','Cparser.py',108),
  ('instructions_opt -> <empty>','instructions_opt',0,'p_instructions_opt','Cparser.py',109),
  ('instructions -> instructions instruction','instructions',2,'p_instructions','Cparser.py',117),
  ('instructions -> instruction','instructions',1,'p_instructions','Cparser.py',118),
  ('instruction -> print_instr','instruction',1,'p_instruction','Cparser.py',133),
  ('instruction -> labeled_instr','instruction',1,'p_instruction','Cparser.py',134),
  ('instruction -> assignment','instruction',1,'p_instruction','Cparser.py',135),
  ('instruction -> choice_instr','instruction',1,'p_instruction','Cparser.py',136),
  ('instruction -> while_instr','instruction',1,'p_instruction','Cparser.py',137),
  ('instruction -> repeat_instr','instruction',1,'p_instruction','Cparser.py',138),
  ('instruction -> return_instr','instruction',1,'p_instruction','Cparser.py',139),
  ('instruction -> break_instr','instruction',1,'p_instruction','Cparser.py',140),
  ('instruction -> continue_instr','instruction',1,'p_instruction','Cparser.py',141),
  ('instruction -> compound_instr','instruction',1,'p_instruction','Cparser.py',142),
  ('instruction -> expression ;','instruction',2,'p_instruction','Cparser.py',143),
  ('print_instr -> PRINT expr_list ;','print_instr',3,'p_print_instr','Cparser.py',147),
  ('print_instr -> PRINT error ;','print_instr',3,'p_print_instr','Cparser.py',148),
  ('labeled_instr -> ID : instruction','labeled_instr',3,'p_labeled_instr','Cparser.py',153),
  ('assignment -> ID = expression ;','assignment',4,'p_assignment','Cparser.py',159),
  ('choice_instr -> IF ( condition ) instruction','choice_instr',5,'p_choice_instr','Cparser.py',165),
  ('choice_instr -> IF ( condition ) instruction ELSE instruction','choice_instr',7,'p_choice_instr','Cparser.py',166),
  ('choice_instr -> IF ( error ) instruction','choice_instr',5,'p_choice_instr','Cparser.py',167),
  ('choice_instr -> IF ( error ) instruction ELSE instruction','choice_instr',7,'p_choice_instr','Cparser.py',168),
  ('while_instr -> WHILE ( condition ) instruction','while_instr',5,'p_while_instr','Cparser.py',175),
  ('while_instr -> WHILE ( error ) instruction','while_instr',5,'p_while_instr','Cparser.py',176),
  ('repeat_instr -> REPEAT instructions UNTIL condition ;','repeat_instr',5,'p_repeat_instr','Cparser.py',183),
  ('return_instr -> RETURN expression ;','return_instr',3,'p_return_instr','Cparser.py',189),
  ('continue_instr -> CONTINUE ;','continue_instr',2,'p_continue_instr','Cparser.py',194),
  ('break_instr -> BREAK ;','break_instr',2,'p_break_instr','Cparser.py',198),
  ('compound_instr -> { declarations instructions_opt }','compound_instr',4,'p_compound_instr','Cparser.py',202),
  ('condition -> expression','condition',1,'p_condition','Cparser.py',209),
  ('const -> INTEGER','const',1,'p_const','Cparser.py',213),
  ('const -> FLOAT','const',1,'p_const','Cparser.py',214),
  ('const -> STRING','const',1,'p_const','Cparser.py',215),
  ('expression -> const','expression',1,'p_expression','Cparser.py',219),
  ('expression -> ID','expression',1,'p_expression','Cparser.py',220),
  ('expression -> expression + expression','expression',3,'p_expression','Cparser.py',221),
  ('expression -> expression - expression','expression',3,'p_expression','Cparser.py',222),
  ('expression -> expression * expression','expression',3,'p_expression','Cparser.py',223),
  ('expression -> expression / expression','expression',3,'p_expression','Cparser.py',224),
  ('expression -> expression % expression','expression',3,'p_expression','Cparser.py',225),
  ('expression -> expression | expression','expression',3,'p_expression','Cparser.py',226),
  ('expression -> expression & expression','expression',3,'p_expression','Cparser.py',227),
  ('expression -> expression ^ expression','expression',3,'p_expression','Cparser.py',228),
  ('expression -> expression AND expression','expression',3,'p_expression','Cparser.py',229),
  ('expression -> expression OR expression','expression',3,'p_expression','Cparser.py',230),
  ('expression -> expression SHL expression','expression',3,'p_expression','Cparser.py',231),
  ('expression -> expression SHR expression','expression',3,'p_expression','Cparser.py',232),
  ('expression -> expression EQ expression','expression',3,'p_expression','Cparser.py',233),
  ('expression -> expression NEQ expression','expression',3,'p_expression','Cparser.py',234),
  ('expression -> expression > expression','expression',3,'p_expression','Cparser.py',235),
  ('expression -> expression < expression','expression',3,'p_expression','Cparser.py',236),
  ('expression -> expression LE expression','expression',3,'p_expression','Cparser.py',237),
  ('expression -> expression GE expression','expression',3,'p_expression','Cparser.py',238),
  ('expression -> ( expression )','expression',3,'p_expression','Cparser.py',239),
  ('expression -> ( error )','expression',3,'p_expression','Cparser.py',240),
  ('expression -> ID ( expr_list_or_empty )','expression',4,'p_expression','Cparser.py',241),
  ('expression -> ID ( error )','expression',4,'p_expression','Cparser.py',242),
  ('expr_list_or_empty -> expr_list','expr_list_or_empty',1,'p_expr_list_or_empty','Cparser.py',260),
  ('expr_list_or_empty -> <empty>','expr_list_or_empty',0,'p_expr_list_or_empty','Cparser.py',261),
  ('expr_list -> expr_list , expression','expr_list',3,'p_expr_list','Cparser.py',269),
  ('expr_list -> expression','expr_list',1,'p_expr_list','Cparser.py',270),
  ('fundefs_opt -> fundefs','fundefs_opt',1,'p_fundefs_opt','Cparser.py',279),
  ('fundefs_opt -> <empty>','fundefs_opt',0,'p_fundefs_opt','Cparser.py',280),
  ('fundefs -> fundefs fundef','fundefs',2,'p_fundefs','Cparser.py',284),
  ('fundefs -> fundef','fundefs',1,'p_fundefs','Cparser.py',285),
  ('fundef -> TYPE ID ( args_list_or_empty ) compound_instr','fundef',6,'p_fundef','Cparser.py',294),
  ('args_list_or_empty -> args_list','args_list_or_empty',1,'p_args_list_or_empty','Cparser.py',298),
  ('args_list_or_empty -> <empty>','args_list_or_empty',0,'p_args_list_or_empty','Cparser.py',299),
  ('args_list -> args_list , arg','args_list',3,'p_args_list','Cparser.py',306),
  ('args_list -> arg','args_list',1,'p_args_list','Cparser.py',307),
  ('arg -> TYPE ID','arg',2,'p_arg','Cparser.py',320),
]
